name: CI/CD Pipeline

on:
  push:
    branches:
      - dev
    tags:
      - "v*.*.*"
  pull_request:
    branches: ["main"]

jobs:
  build-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Java
        uses: actions/setup-java@v3.13.0
        with:
          distribution: "adopt"
          java-version: "17"
      - name: Cache Maven dependencies
        uses: actions/cache@v3.3.2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build Backend
        working-directory: ./backend
        run: mvn clean install

  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4.0.0
        with:
          node-version: 18
      - name: Cache Node.js modules
        uses: actions/cache@v3.3.2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node
      - name: Build and Test Frontend
        working-directory: ./frontend
        run: |
          npm install
          npm run test
          npm run build

  publish:
    #needs: [build-backend, build-frontend]
    runs-on: ubuntu-latest
    env:
      BASE_SEMANTIC_VERSION: ""
    steps:
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_release_rules: |
            bug:patch,
            feat:minor,
            perf:major,
            docs:patch,
            style:patch,
            refactor:patch,
            test:patch,
      - name: Get base semantic version
        run: echo "BASE_SEMANTIC_VERSION=$(echo ${{ steps.tag_version.outputs.new_tag }} | sed -E 's/(v[0-9]+\.[0-9]+\.[0-9]+).*/\1/')" >> $GITHUB_ENV
      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          #tag: ${{ env.BASE_SEMANTIC_VERSION }}
          #name: Release ${{ env.BASE_SEMANTIC_VERSION }}
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}
      - name: Docker meta for backend
        id: meta_backend
        uses: docker/metadata-action@v5
        with:
          images: |
            rofeit00/todo-backend
          tags: |
            type=pep440,pattern={{version}}
            type=match,pattern=\d.\d.\d
#            type=semver,pattern={{major}}.{{minor}}.{{patch}}
#            type=semver,pattern={{major}},enable=${{ !startsWith(github.ref, 'refs/tags/v0.') }}
      - name: Docker meta for frontend
        id: meta_frontend
        uses: docker/metadata-action@v5
        with:
          images: |
            rofeit00/todo-frontend
          tags: |
            type=pep440,pattern={{version}}
            type=match,pattern=\d.\d.\d
#            type=semver,pattern={{major}}.{{minor}}.{{patch}}
#            type=semver,pattern={{major}},enable=${{ !startsWith(github.ref, 'refs/tags/v0.') }}
      - name: Build and push backend
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: ${{ steps.meta_backend.outputs.tags }}
          labels: ${{ steps.meta_backend.outputs.tags }}
          build-args: |
            BUILDTIME=${{ fromJSON(steps.meta_backend.outputs.json).labels['org.opencontainers.image.created'] }}
            VERSION=${{ fromJSON(steps.meta_backend.outputs.json).labels['org.opencontainers.image.version'] }}
            REVISION=${{ fromJSON(steps.meta_backend.outputs.json).labels['org.opencontainers.image.revision'] }}
      - name: Build and push frontend
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: true
          tags: ${{ steps.meta_frontend.outputs.tags }}
          labels: ${{ steps.meta_frontend.outputs.tags }}
          build-args: |
            BUILDTIME=${{ fromJSON(steps.meta_frontend.outputs.json).labels['org.opencontainers.image.created'] }}
            VERSION=${{ fromJSON(steps.meta_frontend.outputs.json).labels['org.opencontainers.image.version'] }}
            REVISION=${{ fromJSON(steps.meta_frontend.outputs.json).labels['org.opencontainers.image.revision'] }}
