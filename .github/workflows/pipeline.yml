name: CI/CD Pipeline

on:
  push:
    branches:
      - dev
      - main
    tags:
      - "v*.*.*"

jobs:
  build-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v3.13.0
        with:
          distribution: "adopt"
          java-version: "17"

      - name: Cache Maven dependencies
        uses: actions/cache@v3.3.2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and Test Backend
        working-directory: ./backend
        run: mvn clean install

  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4.0.0
        with:
          node-version: 18

      - name: Cache Node.js modules
        uses: actions/cache@v3.3.2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node

      - name: Build and Test Frontend
        working-directory: ./frontend
        run: |
          npm install
          npm run test
          npm run build

  package-artifacts:
    needs: [build-backend, build-frontend]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Bump version and push tag
        id: tag_version
        run: |
          git config --global user.email "fesko.robert@gmail.com"
          git config --global user.name "robertfeo"
          git fetch --tags
          latest_tag=$(git describe --tags `git rev-list --tags --max-count=1`)
          echo "Latest tag: $latest_tag"
          new_tag="v$(echo $latest_tag | sed -E 's/v([0-9]+)\.([0-9]+)\.([0-9]+)/echo \1.\2.$((\3+1))/e')"
          echo "New tag: $new_tag"
          git tag $new_tag
          git push origin $new_tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract tag name
        id: get_tag
        run: echo "##[set-output name=tag;]$(echo ${GITHUB_REF#refs/tags/})"
        shell: bash
      - name: Build Docker image for backend
        run: |
          echo "Tag to be used: ${{ steps.tag_version.outputs.new_tag }}"
          docker build -t rofeit00/todo-backend:${{ steps.tag_version.outputs.new_tag }} ./backend
      - name: Build Docker image for frontend
        run: |
          docker build -t rofeit00/todo-frontend:${{ steps.tag_version.outputs.new_tag }} ./frontend
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: rofeit00
          password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}
      - name: Push Docker images
        run: |
          docker push rofeit00/todo-backend:${{ steps.get_tag.outputs.tag }}
          docker push rofeit00/todo-frontend:${{ steps.get_tag.outputs.tag }}

#  deploy:
#    needs: [package-artifacts]
#    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
#    runs-on: ubuntu-latest
#    steps:
#      - name: Deploy with docker-compose
#        run: docker-compose up -d
