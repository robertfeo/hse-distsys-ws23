version: "3.8"
services:
  backend:
    container_name: backend
    image: img-backend
    build:
      context: ./backend/
      dockerfile: Dockerfile
    environment:
      - OTEL_SERVICE_NAME=backend
      - OTEL_METRICS_EXPORTER=none
      - OTEL_TRACES_EXPORTER=jaeger
      - OTEL_EXPORTER_JAEGER_ENDPOINT=http://jaeger:14250
      - SPRING_DATASOURCE_URL=jdbc:postgresql://database:5432/todolist
    ports:
      - "8080:8080"
    depends_on:
      - database
    networks:
      - todolist-network
    restart: unless-stopped

  database:
    container_name: database
    image: img-database
    build:
      context: ./backend/database/
      dockerfile: Dockerfile
    environment:
      - POSTGRES_USER=robert
      - POSTGRES_PASSWORD=securepassword
      - POSTGRES_DB=todolist
      - OTEL_SERVICE_NAME=frontend
      - OTEL_METRICS_EXPORTER=none
      - OTEL_TRACES_EXPORTER=jaeger
      - OTEL_EXPORTER_JAEGER_ENDPOINT=http://jaeger:14250
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - todolist-network

  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: img-frontend
    ports:
      - "3000:3000"
    restart: unless-stopped
    depends_on:
      - backend
    networks:
      - todolist-network

  # -------- METRICS --------
  jaeger:
    container_name: jaeger
    image: jaegertracing/all-in-one:latest
    environment:
      - METRICS_STORAGE_TYPE=prometheus
      - PROMETHEUS_SERVER_URL=http://prometheus:9090
    restart: always
    ports:
      - "14250:14250"
      - "14268:14268"
      - "6831:6831/udp"
      - "16686:16686"
      - "16685:16685"
    networks:
      - todolist-network
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"
    restart: unless-stopped
    volumes:
      - ./metrics/prometheus:/etc/prometheus
      - prom_data:/prometheus
    networks:
      - todolist-network

networks:
  todolist-network:
    name: todolist-network
    driver: bridge

volumes:
  db-data:
    name: volume-database
  prom_data:
    name: prometheus
